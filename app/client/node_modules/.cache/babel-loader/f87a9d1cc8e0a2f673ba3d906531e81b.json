{"ast":null,"code":"import _asyncToGenerator from \"/home/dennis/work/dev/clients/accion/vertigo/app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: \"LoginForm\",\n  data: function data() {\n    return {\n      username: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var request_data, response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"Inside Login\");\n\n                if (!(_this.username === 'dennis' && _this.password === 'Wexford')) {\n                  _context.next = 9;\n                  break;\n                }\n\n                //Success Route - DashBoard\n                //sessionStorage.setItem(\"loginSuccess\", true);\n                request_data = {\n                  \"username\": _this.username,\n                  \"password\": _this.password\n                };\n                _context.next = 5;\n                return axios.post('http://localhost:8084/api/login', request_data);\n\n              case 5:\n                response = _context.sent;\n                //const response = await axios.get('http://localhost:8084/api/user');\n                //const response = await axios.get('https://jsonplaceholder.typicode.com/posts');  \n                console.log(response.data); //this.$router.push({name : 'dashboard'})\n\n                _context.next = 10;\n                break;\n\n              case 9:\n                _this.$notify.error({\n                  title: 'Error',\n                  message: 'Invalid Credentials'\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  created: function created() {\n    sessionStorage.setItem(\"loginSuccess\", false);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AAEA;AACAA,mBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,kBADA;AAEAC;AAFA;AAIA,GAPA;AAQAC;AACAC,SADA,mBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC;;AADA,sBAEA,2DAFA;AAAA;AAAA;AAAA;;AAGA;AACA;AAEAC,4BANA,GAMA;AAAA;AAAA;AAAA,iBANA;AAAA;AAAA,uBAOAC,2DAPA;;AAAA;AAOAC,wBAPA;AASA;AACA;AACAH,2CAXA,CAYA;;AAZA;AAAA;;AAAA;AAcA;AACAI,gCADA;AAEAC;AAFA;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA;AA/BA,GARA;AAyCAC,SAzCA,qBAyCA;AACAC;AACA;AA3CA","names":["name","data","username","password","methods","login","console","request_data","axios","response","title","message","created","sessionStorage"],"sourceRoot":"src/components","sources":["LoginForm.vue"],"sourcesContent":["<!-- <template>\r\n  <div v-if=\"loading\">Loading...</div>\r\n  <div v-else-if=\"error\">{{ error }}</div>\r\n  <ul v-else>\r\n    <li>{{this.data.name}}</li>\r\n    <li v-for=\"item in data\" :key=\"item.id\">{{ item.name}}</li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: null,\r\n      loading: false,\r\n      error: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      this.loading = true;\r\n      this.error = null;\r\n      try {\r\n        const response = await axios.get('https://api.nationalize.io/?name=nathaniel');\r\n        console.log(response.data)\r\n        this.data = response.data;\r\n      } catch (err) {\r\n        this.error = err.message;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script> -->\r\n\r\n\r\n<template>\r\n  <div class=\"registration\">\r\n    <div>\r\n      <p\r\n        style=\"\r\n          margin-top: 110px;\r\n          margin-left: 15%;\r\n          font-size: 20px;\r\n          font-weight: 500;\r\n          color: #212f3d;\r\n          padding-top: 36px;\r\n        \"\r\n      >\r\n        For Access Dashbaord\r\n      </p>\r\n    </div>\r\n    <div style=\"margin-top: 50px\">\r\n      <el-form>\r\n        <el-form-item label=\"username\">\r\n          <el-input placeholder=\"username\" v-model=\"username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"password\">\r\n          <el-input placeholder=\"password\" v-model=\"password\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <button @click=\"login()\">Log in</button>\r\n    </div>\r\n\r\n    <div class=\"dhac\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"LoginForm\",\r\n  data() {\r\n    return {\r\n      username :\"\",\r\n      password: \"\"\r\n    }\r\n  },\r\n  methods : {\r\n    async login() {\r\n      console.log(\"Inside Login\");\r\n      if(this.username === 'dennis' && this.password === 'Wexford') {\r\n        //Success Route - DashBoard\r\n        //sessionStorage.setItem(\"loginSuccess\", true);\r\n\r\n        const request_data = {\"username\":this.username, \"password\":this.password}\r\n        const response = await axios.post('http://localhost:8084/api/login',request_data);\r\n\r\n        //const response = await axios.get('http://localhost:8084/api/user');\r\n        //const response = await axios.get('https://jsonplaceholder.typicode.com/posts');  \r\n        console.log(response.data)\r\n        //this.$router.push({name : 'dashboard'})\r\n      } else {\r\n         this.$notify.error({\r\n          title: 'Error',\r\n          message: 'Invalid Credentials'\r\n        });\r\n      }\r\n      // this.loading = true;\r\n      // this.error = null;\r\n      // try {\r\n      //   const response = axios.get('https://jsonplaceholder.typicode.com/posts');\r\n      //   this.posts = response.data;\r\n      //   console.log(response.data);\r\n      // } catch (err) {\r\n      //   this.error = 'Failed to fetch posts.';\r\n      // } finally {\r\n      //   this.loading = false;\r\n      // }\r\n    }\r\n  },\r\n  created() {\r\n    sessionStorage.setItem(\"loginSuccess\", false)\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.registration {\r\n  width: 400px;\r\n  height: 490px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n    0 100px 80px rgba(0, 0, 0, 0.12);\r\n  margin-left: 222px;\r\n}\r\n\r\n>>> .el-form-item__label {\r\n  margin-left: 30px;\r\n}\r\n\r\n>>> .el-form-item__content {\r\n  margin-left: 27px;\r\n  width: 72%;\r\n}\r\n\r\nbutton {\r\n  width: 130px;\r\n  height: 40px;\r\n  border-radius: 4px;\r\n  background-color: #3498db;\r\n  border: 2px solid #3498db;\r\n  color: #ffffff;\r\n  font-weight: 500;\r\n  margin-left: 30%;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #caccce;\r\n  color: #0f0f0f;\r\n  border: 2px solid #caccce;\r\n  width: 135px;\r\n  height: 44px;\r\n  animation-name: pulse;\r\n  animation-duration: 4s;\r\n}\r\n.dhac {\r\n  margin-left:17%;\r\n  font-size: 14px;\r\n  margin-top:50px;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color:#3498db;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}