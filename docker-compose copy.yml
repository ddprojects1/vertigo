version: "3.9"

services:
  
  database:
    container_name: vertigo-database
    image: postgres:14-alpine
    ports:
      - "5000:5000"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=vertigo-app
    command: -p 5000
    networks:
      - vertigo-network
      
  liquibase:
    container_name: vertigo-liquibase
    image: liquibase/liquibase:4.25
    command: generate-changelog
    environment:
      LIQUIBASE_LIQUIBASE_SCHEMA_NAME: liquibase #use when you create schema for tracking liquibase changes
      LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog.xml
      LIQUIBASE_COMMAND_DRIVER: org.postgresql.Driver
      LIQUIBASE_COMMAND_URL: jdbc:postgresql://database:5000/postgres
      LIQUIBASE_COMMAND_USERNAME: admin
      LIQUIBASE_COMMAND_PASSWORD: postgre
      LIQUIBASE_COMMAND_DEFAULT_SCHEMA_NAME: public 
      LIQUIBASE_SEARCH_PATH: /liquibase

  volumes:
    - ./data/config/changelog.xml:/liquibase/changelog.xml
    - ./data/scripts/releases:/liquibase/scripts

    # container_name: vertigo-liquibase
    # image: liquibase/liquibase:4.24.0
    
    # depends_on:
    #   - database

    # command: update --changelog-file=../data/config/changelog.xml --username=admin --password=password --url=jdbc:postgresql://database:5000/postgres
    # volumes:
    #   - ./data/config/:/liquibase/changelog.xml
    #   - ./data/scripts/releases:/liquibase/scripts

    
  

    # environment:
    #   LIQUIBASE_COMMAND_CHANGELOG_FILE: /data/config/changelog.xml
    #   LIQUIBASE_COMMAND_DRIVER: org.postgresql.Driver
    #   LIQUIBASE_COMMAND_URL: jdbc:postgresql://database:5000/postgres
    #   LIQUIBASE_COMMAND_USERNAME: admin
    #   LIQUIBASE_COMMAND_PASSWORD: password
    #   LIQUIBASE_COMMAND_DEFAULT_SCHEMA_NAME: public 
    #   LIQUIBASE_SEARCH_PATH: /data

    networks:
      - vertigo-network

#   app-client:
#     build:
#       context: ./app/ams/client
#       dockerfile: Dockerfile
#     container_name: app-client
#     restart: always
#     ports:
#       - "8080:8080"
#     networks:
#       - app-network
networks:
   vertigo-network:
    #  driver: bridge
