version: "3.9"

services:
# Logger Service for Getting Dozzle Up
  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: vertigo-dozzle
    restart: unless-stopped
    ports:
      - "8084:8080"
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # disable when using socket proxy

    networks:
      - vertigo-network

  database:
    container_name: vertigo-database
    image: postgres:14-alpine
    ports:
      - "5000:5000"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=admin
      - POSTGRES_DB=vertigo-app
    command: -p 5000
    networks:
      - vertigo-network
      
  liquibase:
    container_name: vertigo-liquibase
    image: liquibase/liquibase:4.25
    command: update
    environment:
      #LIQUIBASE_LIQUIBASE_SCHEMA_NAME: liquibase #use when you create schema for tracking liquibase changes
      LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog.xml
      LIQUIBASE_COMMAND_DRIVER: org.postgresql.Driver
      LIQUIBASE_COMMAND_URL: jdbc:postgresql://database:5000/postgres
      LIQUIBASE_COMMAND_USERNAME: admin
      LIQUIBASE_COMMAND_PASSWORD: password
      LIQUIBASE_COMMAND_DEFAULT_SCHEMA_NAME: public 
      LIQUIBASE_SEARCH_PATH: /liquibase

    volumes:
      - ./data/config/changelog.xml:/liquibase/changelog.xml
      - ./data/scripts:/liquibase/scripts
    networks:
     - vertigo-network
  app-client:
    build:
      context: ./app/client
      dockerfile: Dockerfile
    container_name: app-client
    restart: always
    ports:
      - "8081:8081"
    networks:
      - vertigo-network

  app-server:
    build:
      context: ./app/server
      dockerfile: Dockerfile
    container_name: app-server
    restart: always
    ports:
      - "8084:8084"
    networks:
      - vertigo-network

networks:
   vertigo-network:
    #  driver: bridge
